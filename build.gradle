buildscript {
    repositories {
        flatDir {
            dir 'libs'
        }
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '16.6.4'
group = 'com.yesman.epicfight'
archivesBaseName = 'epicfight'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

	    property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			args '-mixin.config=epicfight.mixins.json'

            mods {
                epicfight {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

	    property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			args '-mixin.config=epicfight.mixins.json'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'epicfight', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                epicfight {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, "epicfight.mixins.refmap.json"
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'
    implementation 'org.openjdk.nashorn:nashorn-core:15.3'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    //implementation fg.deobf("{随便填}:{模组名字}-{mc版本}:{模组版本}")
    //implementation fg.deobf("blank:EpicFight-1.18.2:18.5.7")
    compileOnly(files("./libs/CustomNPCs-1.16.5.20220728snapshot.jar"))
    compileOnly(files("./libs/时装工坊修复版armourersworkshop-forge-1.16.5-2.0.3-dev.2.jar"))
}

jar {
    manifest {
        attributes([
            "Specification-Title": "epicfight",
            "Specification-Vendor": "epicfightsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "epicfight.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}